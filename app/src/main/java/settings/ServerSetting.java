package settings;

import android.net.Uri;
import android.text.TextUtils;

/**
 * Created by Amar on 3/8/16.
 *
 * This file was heavily copied/modified from Eric Kok:
 * Transdroid:
 *      org.transdroid.core.app.settings:
 *      ServerSetting.java
 */
public class ServerSetting {

    private static final String DEFAULT_NAME = "Default";

    private final int key;
    private final String name;
    //private final Daemon type;
    private final String address;
    private final String localAddress;
    private final int localPort;
    private final String localNetwork;
    private final int port;
    //private final String folder;
    //private final boolean useAuthentication;
    private final String username;
    private final String password;
    //private final String extraPass;
    //private final OS os;
    //private final String downloadDir;
    //private final String ftpUrl;
    //private final String ftpPassword;
    //private final int timeout;
    //private final boolean alarmOnFinishedDownload;
    //private final boolean alarmOnNewTorrent;
    //private final boolean ssl;
    //private final boolean sslTrustAll;
    //private final String sslTrustKey;
    //private final String excludeFilter;
    //private final String includeFilter;
    //private final boolean isAutoGenerated;

    public ServerSetting(int key, String name, String address, String localAddress,
                         int localPort, String localNetwork, int port,
                         String username, String password) {
        this.key = key;
        this.name = name;
        this.address = address;
        this.localAddress = localAddress;
        this.localPort = localPort;
        this.localNetwork = localNetwork;
        this.port = port;
        this.username = username;
        this.password = password;
    }

    public String getName() {
        if (!TextUtils.isEmpty(name)) {
            return name;
        }
        if (!TextUtils.isEmpty(address)) {
            String host = Uri.parse(address).getHost();
            return host == null ? DEFAULT_NAME : host;
        }
        return DEFAULT_NAME;
    }

    public String getAddress() {
        return address;
    }

    public String getLocalAddress() {
        return localAddress;
    }

    public int getLocalPort() {
        return localPort;
    }

    public String getLocalNetwork() {
        return localNetwork;
    }

    public int getPort() {
        return port;
    }

    public String getUsername() {
        return username;
    }

    public String getPassword() {
        return password;
    }

    public int getOrder() {
        return this.key;
    }

    public String getHumanReadableId() {
        return "http://" + this.getUsername() + "@" + getAddress() + ":" + getPort();
    }

    // Didn't include the following functions
    //public String getUniqueId()
    //public boolean equals()
    //public String toString()
    //public iDaemonAdapter createServerAdapter()
    //private DaemonSettings convertToDaemonSettings()
}
